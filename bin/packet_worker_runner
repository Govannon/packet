#!/usr/bin/env ruby
EVAL_APP_ROOT = File.expand_path(File.join(File.dirname(__FILE__) + "/.."))
["extras","bin","worker","lib"].each { |x| $LOAD_PATH.unshift(EVAL_APP_ROOT + "/#{x}")}
WORKER_ROOT = EVAL_APP_ROOT + "/worker"

require "packet"

include Packet::NbioHelper

if __FILE__ == $0
  cmd_args = ARGV[0].split(':')
  worker_name = cmd_args[2]
  initial_arg_data_length = cmd_args[3].to_i
  worker_read_fd = UNIXSocket.for_fd(cmd_args[0].to_i)

  worker_write_fd = UNIXSocket.for_fd(cmd_args[1].to_i)

  initial_arg_data = worker_read_fd.read(initial_arg_data_length)

  worker_options = Marshal.load(initial_arg_data)

  require "#{WORKER_ROOT}/#{worker_name}"
  worker_klass = Object.const_get(packet_classify(worker_name))
  worker_klass.start_worker(:read_end => worker_read_fd,:write_end => worker_write_fd,:options => worker_options)
end


